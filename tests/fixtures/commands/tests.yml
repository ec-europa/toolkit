- command: 'toolkit:setup-eslint'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('npm ini -y')
        [Simulator] Running npm ini -y
        [Simulator] Simulating Exec('npm install --save-dev eslint-config-drupal eslint-plugin-yml -y')
        [Simulator] Running npm install --save-dev eslint-config-drupal eslint-plugin-yml -y
        [File\Write] Writing to .eslintrc.json.
        [Simulator] Simulating File\Write('.prettierignore')
          ->text('*.yml')

- command: 'toolkit:setup-eslint'
  configuration: []
  resources:
    - from: sample-package.json
      to: package.json
  expectations:
    - contains: |
        [File\Write] Writing to .eslintrc.json.
        [Simulator] Simulating File\Write('.prettierignore')
          ->text('*.yml')

- command: 'toolkit:setup-eslint --force'
  configuration: []
  resources:
    - from: sample-eslintrc.json
      to: .eslintrc.json
  expectations:
    - contains: |
        [Simulator] Simulating Exec('rm')
          ->arg('.eslintrc.json')
        [Simulator] Running rm .eslintrc.json
        [Simulator] Simulating Exec('npm ini -y')
        [Simulator] Running npm ini -y
        [Simulator] Simulating Exec('npm install --save-dev eslint-config-drupal eslint-plugin-yml -y')
        [Simulator] Running npm install --save-dev eslint-config-drupal eslint-plugin-yml -y
        [Simulator] Simulating File\Write('.prettierignore')
          ->text('*.yml')

- command: 'toolkit:setup-eslint'
  configuration: []
  resources:
    - from: sample-package.json
      to: package.json
    - from: sample-eslintrc.json
      to: .eslintrc.json
    - from: sample-prettierignore
      to: .prettierignore
  expectations:
    - contains: '>  No actions needed.'

- command: 'toolkit:lint-yaml'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/run')
          ->arg('toolkit:setup-eslint')
        [Simulator] Running ./vendor/bin/run 'toolkit:setup-eslint'
        [Simulator] Simulating Exec('./node_modules/.bin/eslint')
          ->options(array (
            'config' => '.eslintrc.json',
            'ext' => '.yml,.yaml',
          ))
          ->arg('.')
        [Simulator] Running ./node_modules/.bin/eslint --config .eslintrc.json --ext '.yml,.yaml' .

- command: 'toolkit:lint-yaml --options=fix'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/run')
          ->arg('toolkit:setup-eslint')
        [Simulator] Running ./vendor/bin/run 'toolkit:setup-eslint'
        [Simulator] Simulating Exec('./node_modules/.bin/eslint')
          ->options(array ( ... ))
          ->arg('.')
        [Simulator] Running ./node_modules/.bin/eslint --config .eslintrc.json --ext '.yml,.yaml' --fix .

- command: 'toolkit:lint-js'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/run')
          ->arg('toolkit:setup-eslint')
        [Simulator] Running ./vendor/bin/run 'toolkit:setup-eslint'
        [Simulator] Simulating Exec('./node_modules/.bin/eslint')
          ->options(array (
            'config' => '.eslintrc.json',
            'ext' => '.js',
          ))
          ->arg('.')
        [Simulator] Running ./node_modules/.bin/eslint --config .eslintrc.json --ext .js .

- command: 'toolkit:lint-js --options=fix'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/run')
          ->arg('toolkit:setup-eslint')
        [Simulator] Running ./vendor/bin/run 'toolkit:setup-eslint'
        [Simulator] Simulating Exec('./node_modules/.bin/eslint')
          ->options(array (
            'config' => '.eslintrc.json',
            'ext' => '.js',
            'fix' => NULL,
          ))
          ->arg('.')
        [Simulator] Running ./node_modules/.bin/eslint --config .eslintrc.json --ext .js --fix .

- command: 'toolkit:lint-php'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/parallel-lint')
          ->option('exclude', 'vendor/')
          ->option('exclude', 'web/')
          ->option('-e', 'php,module,inc,theme,install')
          ->rawArg('.')
        [Simulator] Running ./vendor/bin/parallel-lint --exclude vendor/ --exclude web/ -e 'php,module,inc,theme,install' .

- command: 'toolkit:lint-php --options=show-deprecated'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/parallel-lint')
          ->option('exclude', 'vendor/')
          ->option('exclude', 'web/')
          ->option('-e', 'php,module,inc,theme,install')
          ->option('show-deprecated')
          ->rawArg('.')
        [Simulator] Running ./vendor/bin/parallel-lint --exclude vendor/ --exclude web/ -e 'php,module,inc,theme,install' --show-deprecated .

- command: 'toolkit:test-phpstan'
  configuration: []
  resources: []
  expectations:
    - contains: ">  Could not find a Drupal installation, skipping."

- command: 'toolkit:test-phpstan'
  configuration: []
  resources:
    - mkdir: web
  expectations:
    - contains: |
        [Simulator] Simulating File\Write('phpstan.neon')
          ->text('parameters: ... ')
        [Simulator] Simulating Exec('./vendor/bin/phpstan')
          ->arg('analyse')
          ->options(array (
            'memory-limit' => '4G',
            'configuration' => 'phpstan.neon',
          ), '=')
        [Simulator] Running ./vendor/bin/phpstan analyse --memory-limit=4G --configuration=phpstan.neon

- command: 'toolkit:test-phpstan --memory-limit=512M'
  configuration: []
  resources:
    - mkdir: web
  expectations:
    - contains: |
        [Simulator] Simulating File\Write('phpstan.neon')
          ->text('parameters: ... ')
        [Simulator] Simulating Exec('./vendor/bin/phpstan')
          ->arg('analyse')
          ->options(array (
            'memory-limit' => '512M',
            'configuration' => 'phpstan.neon',
          ), '=')
        [Simulator] Running ./vendor/bin/phpstan analyse --memory-limit=512M --configuration=phpstan.neon

- command: 'toolkit:test-phpstan'
  configuration:
    toolkit:
      test:
        phpstan:
          config: fake
          level: 3
          files: [ test.php, test2.php ]
          memory-limit: 512M
          options: debug
  resources:
    - mkdir: web
    - from: sample-config.yml
      to: test.php
    - from: sample-config.yml
      to: test2.php
  expectations:
    - contains: |
        [Simulator] Simulating File\Write('fake')
          ->text('parameters: ... ')
        [Simulator] Simulating Exec('./vendor/bin/phpstan')
          ->arg('analyse')
          ->options(array (
            'memory-limit' => '4G',
            'configuration' => 'fake',
          ), '=')
          ->options(array (
            'debug' => NULL,
          ))
        [Simulator] Running ./vendor/bin/phpstan analyse --memory-limit=4G --configuration=fake --debug

- command: 'toolkit:test-phpstan --memory-limit=512M --config=fake --level=3'
  configuration: []
  resources:
    - mkdir: web
    - from: sample-config.yml
      to: test.php
    - from: sample-config.yml
      to: fake
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/phpstan')
          ->arg('analyse')
          ->options(array (
            'memory-limit' => '512M',
            'configuration' => 'fake',
          ), '=')
        [Simulator] Running ./vendor/bin/phpstan analyse --memory-limit=512M --configuration=fake

- command: 'toolkit:setup-phpcs'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating File\Write('phpcs.xml')
          ->text('<?xml version="1.0" encoding="UTF-8"?> ... ')

- command: 'toolkit:test-phpcs'
  configuration: []
  resources:
    - from: sample-phpcs.xml
      to: phpcs.xml
  expectations:
    - contains: |
        >  Executing PHPcs.
        [Simulator] Simulating Exec('./vendor/bin/phpcs --standard=phpcs.xml')
        [Simulator] Running ./vendor/bin/phpcs --standard=phpcs.xml

- command: 'toolkit:test-phpmd'
  configuration: []
  resources: []
  expectations:
    - contains: |
        Could not find the ruleset file, the default will be created in the project root.
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->copy('/test/toolkit/resources/phpmd.xml', 'phpmd.xml')
        [Simulator] Simulating Exec('./vendor/bin/phpmd')
          ->args(array (
            0 => '',
            1 => 'ansi',
            2 => 'phpmd.xml',
          ))
          ->options(array (
            'exclude' => '',
            'suffixes' => 'php,module,inc,theme,install',
          ))
        [Simulator] Running ./vendor/bin/phpmd '' ansi phpmd.xml --exclude --suffixes 'php,module,inc,theme,install'

- command: 'toolkit:test-phpmd'
  configuration: []
  resources:
    - mkdir: src
    - mkdir: vendor
    - from: sample-phpmd.xml
      to: phpmd.xml
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/phpmd')
          ->args(array (
            0 => 'src',
            1 => 'ansi',
            2 => 'phpmd.xml',
          ))
          ->options(array ( ... ))
        [Simulator] Running ./vendor/bin/phpmd src ansi phpmd.xml --exclude vendor/ --suffixes 'php,module,inc,theme,install'

- command: 'toolkit:check-phpcs-requirements'
  configuration: []
  resources:
    - from: sample-phpcs-wrong.xml
      to: phpcs.xml
  expectations:
    - contains: |
        [error]  The following standards are missing, please add them to the configuration file 'phpcs.xml'.
        ./vendor/drupal/coder/coder_sniffer/Drupal
        ./vendor/drupal/coder/coder_sniffer/DrupalPractice
        ./vendor/ec-europa/qa-automation/phpcs/QualityAssurance

- command: 'toolkit:check-phpcs-requirements'
  configuration: []
  resources:
    - from: sample-phpcs.xml
      to: phpcs.xml
  expectations:
    - not_contains: "[error]  The following standards are missing, please add them to the configuration file"

- command: 'toolkit:test-behat'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/run toolkit:install-dependencies')
        [Simulator] Running ./vendor/bin/run toolkit:install-dependencies
        [Simulator] Simulating EcEuropa\Toolkit\Task\File\Process('behat.yml.dist', 'behat.yml')
        [Simulator] Running ./vendor/bin/behat --profile=default --strict --dry-run
        [Simulator] Simulating Exec('./vendor/bin/behat')
          ->options(array (
            'profile' => 'default',
            'strict' => NULL,
          ), '=')
        [Simulator] Running ./vendor/bin/behat --profile=default --strict

- command: 'toolkit:test-phpunit'
  configuration: []
  resources: []
  expectations:
    - contains: ">  PHUnit configuration not found, skipping."

- command: 'toolkit:test-phpunit'
  configuration: []
  resources:
    - from: sample-phpunit.xml.dist
      to: phpunit.xml
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/phpunit ')
        [Simulator] Running ./vendor/bin/phpunit

- command: 'toolkit:run-phpcbf'
  configuration: []
  resources:
    - from: sample-phpcs.xml
      to: phpcs.xml
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/phpcbf --standard=phpcs.xml')
        [Simulator] Running ./vendor/bin/phpcbf --standard=phpcs.xml

- command: 'toolkit:run-blackfire'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('which blackfire')
          ->silent(1)
        [Simulator] Running which blackfire
        [Simulator] Simulating Exec('cat /etc/blackfire/agent | grep server-id=')
          ->silent(1)
        [Simulator] Running cat /etc/blackfire/agent | grep server-id=
        >  Checking page: http://web:8080/web/
        [Simulator] Simulating Exec('blackfire --json curl http://web:8080/web/')
           ->silent(1)
        [Simulator] Running blackfire --json curl http://web:8080/web/
        >  Something went wrong, please contact the QA team.
