- command: 'toolkit:build-dist --root=web --dist-root=dist --tag=1.0.0 --sha=aBcDeF --keep=vendor --remove=CHANGELOG.txt'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->remove('dist')
          ->mkdir('dist')
        [Simulator] Simulating Exec('git archive HEAD | tar -x -C dist')
        [Simulator] Running git archive HEAD | tar -x -C dist
        [Simulator] Simulating Composer\Install('composer')
          ->env('COMPOSER_MIRROR_PATH_REPOS', '1')
          ->workingDir('dist')
          ->optimizeAutoloader()
          ->noDev()
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('./vendor/bin/run drupal:permissions-setup --root=dist/web')
          ->exec('./vendor/bin/run drupal:settings-setup --root=dist/web')
        [Simulator] Simulating Exec('find dist -maxdepth 1 ! -name "dist" ! -name "vendor" -exec rm -rf {} +')
        [Simulator] Running find dist -maxdepth 1 ! -name "dist" ! -name "vendor" -exec rm -rf {} +
        [Simulator] Simulating File\Write('dist/manifest.json')
          ->text('{"drupal_profile":"minimal","project_id":"toolkit","dr ... .0","sha":"aBcDeF"}')
        [Simulator] Simulating File\Write('dist/web/VERSION.txt')
          ->text('1.0.0')
        [Simulator] Simulating Exec('find dist -maxdepth 5 \( -name "CHANGELOG.txt" \) -exec rm -rf {} +')
        [Simulator] Running find dist -maxdepth 5 \( -name "CHANGELOG.txt" \) -exec rm -rf {} +

- command: 'toolkit:build-dist --root=web --dist-root=dist --tag=1.0.0 --sha=aBcDeF --keep=vendor --remove=CHANGELOG.txt'
  configuration:
    toolkit:
      project_id: toolkit
    drupal:
      site:
        profile: test
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->remove('dist')
          ->mkdir('dist')
        [Simulator] Simulating Exec('git archive HEAD | tar -x -C dist')
        [Simulator] Running git archive HEAD | tar -x -C dist
        [Simulator] Simulating Composer\Install('composer')
          ->env('COMPOSER_MIRROR_PATH_REPOS', '1')
          ->workingDir('dist')
          ->optimizeAutoloader()
          ->noDev()
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('./vendor/bin/run drupal:permissions-setup --root=dist/web')
          ->exec('./vendor/bin/run drupal:settings-setup --root=dist/web')
        [Simulator] Simulating Exec('find dist -maxdepth 1 ! -name "dist" ! -name "vendor" -exec rm -rf {} +')
        [Simulator] Running find dist -maxdepth 1 ! -name "dist" ! -name "vendor" -exec rm -rf {} +
        [Simulator] Simulating File\Write('dist/manifest.json')
          ->text('{"drupal_profile":"test","project_id":"toolkit","drupa ... .0","sha":"aBcDeF"}')
        [Simulator] Simulating File\Write('dist/web/VERSION.txt')
          ->text('1.0.0')
        [Simulator] Simulating Exec('find dist -maxdepth 5 \( -name "CHANGELOG.txt" \) -exec rm -rf {} +')
        [Simulator] Running find dist -maxdepth 5 \( -name "CHANGELOG.txt" \) -exec rm -rf {} +

- command: 'toolkit:build-dist'
  configuration:
    toolkit:
      project_id: toolkit
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->remove('dist')
          ->mkdir('dist')
        [Simulator] Simulating Exec('git archive HEAD | tar -x -C dist')
        [Simulator] Running git archive HEAD | tar -x -C dist
        [Simulator] Simulating Composer\Install('composer')
          ->env('COMPOSER_MIRROR_PATH_REPOS', '1')
          ->workingDir('dist')
          ->optimizeAutoloader()
          ->noDev()
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('./vendor/bin/run drupal:permissions-setup --root=dist/web')
          ->exec('./vendor/bin/run drupal:settings-setup --root=dist/web')
        [Simulator] Simulating Exec('find dist -maxdepth 1 ! -name "dist" ! -name "web" ! - ... " -exec rm -rf {} +')
        [Simulator] Running find dist -maxdepth 1 ! -name "dist" ! -name "web" ! -name "config" ! -name "vendor" ! -name "composer.lock" ! -name "composer.json" -exec rm -rf {} +
        [Simulator] Simulating File\Write('dist/manifest.json')
          ->text('{"drupal_profile":"minimal","project_id":"toolkit","dr ... rsion":"","sha":""}')
        [Simulator] Simulating File\Write('dist/web/VERSION.txt')
          ->text('')
        [Simulator] Simulating Exec('find dist -maxdepth 5 \( -name "CHANGELOG.md" -o -name ... ) -exec rm -rf {} +')
        [Simulator] Running find dist -maxdepth 5 \( -name "CHANGELOG.md" -o -name "CHANGELOG.txt" -o -name "COPYRIGHT.txt" -o -name "INSTALL.mysql.txt" -o -name "INSTALL.pgsql.txt" -o -name "install.php" -o -name "INSTALL.sqlite.txt" -o -name "INSTALL.txt" -o -name "LICENSE.txt" -o -name "MAINTAINERS.txt" -o -name "UPDATE.txt" -o -name "README.txt" -o -name "node_modules" -o -name ".sass-cache" \) -exec rm -rf {} +

- command: 'toolkit:build-dev'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('./vendor/bin/run toolkit:install-dependencies')
          ->exec('./vendor/bin/run drupal:settings-setup --root=web')
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('mkdir -p web/sites/default/files')
          ->exec('chmod ug=rwx,o= web/sites/default/files')
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('mkdir -p web/sites/default/private_files')
          ->exec('chmod ug=rwx,o= web/sites/default/private_files')

- command: 'toolkit:build-dev --root=test'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('./vendor/bin/run toolkit:install-dependencies')
          ->exec('./vendor/bin/run drupal:settings-setup --root=test')
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('mkdir -p test/sites/default/files')
          ->exec('chmod ug=rwx,o= test/sites/default/files')
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('mkdir -p test/sites/default/private_files')
          ->exec('chmod ug=rwx,o= test/sites/default/private_files')

- command: 'toolkit:build-dev-reset --root=web --yes'
  configuration: []
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Vcs\GitStack('git')
          ->stopOnFail()
          ->exec('clean -fdx --exclude=vendor/ec-europa/toolkit')
        [Simulator] Simulating Composer\Install('composer')
        [Simulator] Simulating ExecStack()
          ->stopOnFail()
          ->exec('./vendor/bin/run toolkit:build-dev --root=web')

- command: 'toolkit:build-assets'
  configuration: []
  resources: []
  expectations:
    - contains: ">  The default-theme couldn't be found in the project. Skipping build."

- command: 'toolkit:build-assets --default-theme=theme --custom-code-folder=code --theme-task-runner=gulp --build-npm-packages=gulp-cli'
  configuration: []
  resources:
    - from: sample-package.json
      to: code/theme/package.json
  expectations:
    - contains: |
        [Simulator] Simulating ExecStack()
          ->dir('/test/toolkit/tests/sandbox/BuildCommandsTest/code/theme')
          ->stopOnFail()
          ->exec('npm -v || npm i npm')
          ->exec('[ -f package.json ] || npm init -y --scope')
          ->exec('npm list sass || npm install sass -y')
          ->exec('cp /test/toolkit/resources/assets/gulpfile.js /test/to ... e/theme/gulpfile.js')
          ->exec('npm list gulp-cli || npm install gulp-cli --save-dev')
          [Simulator] Simulating Exec('./node_modules/.bin/gulp')
            ->dir('/test/toolkit/tests/sandbox/BuildCommandsTest/code/theme')
          [Simulator] Running ./node_modules/.bin/gulp in /test/toolkit/tests/sandbox/BuildCommandsTest/code/theme

- command: 'toolkit:build-assets --default-theme=theme --custom-code-folder=code'
  configuration: []
  resources:
    - from: sample-package.json
      to: code/theme/package.json
  expectations:
    - contains: |
        [Simulator] Simulating ExecStack()
          ->dir('/test/toolkit/tests/sandbox/BuildCommandsTest/code/theme')
          ->stopOnFail()
          ->exec('npm -v || npm i npm')
          ->exec('[ -f package.json ] || npm init -y --scope')
          ->exec('npm list sass || npm install sass -y')
          ->exec('cp /test/toolkit/resources/assets/ecl-builder.config.j ... l-builder.config.js')
          ->exec('npm list @ecl/builder || npm install @ecl/builder --save-dev')
          ->exec('npm list @ecl/preset-ec || npm install @ecl/preset-ec --save-dev')
          ->exec('npm list @ecl/preset-eu || npm install @ecl/preset-eu --save-dev')
          ->exec('npm list @ecl/preset-reset || npm install @ecl/preset-reset --save-dev')
        [Simulator] Simulating Exec('./node_modules/.bin/ecl-builder styles')
          ->dir('/test/toolkit/tests/sandbox/BuildCommandsTest/code/theme')
        [Simulator] Running ./node_modules/.bin/ecl-builder styles in /test/toolkit/tests/sandbox/BuildCommandsTest/code/theme
        [Simulator] Simulating Exec('./node_modules/.bin/ecl-builder scripts')
          ->dir('/test/toolkit/tests/sandbox/BuildCommandsTest/code/theme')
        [Simulator] Running ./node_modules/.bin/ecl-builder scripts in /test/toolkit/tests/sandbox/BuildCommandsTest/code/theme
