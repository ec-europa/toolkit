- command: 'drupal:settings-setup'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - file: 'web/sites/default/settings.php'
      contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->copy('web/sites/default/default.settings.php', 'web/sites/default/settings.php')
        [Simulator] Simulating File\Replace('web/sites/default/settings.php')
          ->regex('/^\n\/\/ Start Toolkit settings block\..*?\/\/ End Too ... ttings block\.\n/sm')
          ->to('')
        [Simulator] Simulating File\Write('web/sites/default/settings.php')
          ->append()
          ->text(' ... ')
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->chmod('web/sites/default', 509)

- command: 'drupal:settings-setup --root=website'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - file: 'web/sites/default/settings.php'
      contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->copy('website/sites/default/default.settings.php', 'website/sites/default/settings.php')
        [Simulator] Simulating File\Replace('website/sites/default/settings.php')
          ->regex('/^\n\/\/ Start Toolkit settings block\..*?\/\/ End Too ... ttings block\.\n/sm')
          ->to('')
        [Simulator] Simulating File\Write('website/sites/default/settings.php')
          ->append()
          ->text(' ... ')
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->chmod('website/sites/default', 509)

- command: 'drupal:settings-setup --sites-subdir=sub_dir'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - file: 'web/sites/default/settings.php'
      contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
        ->copy('web/sites/default/default.settings.php', 'web/sites/sub_dir/settings.php')
        [Simulator] Simulating File\Replace('web/sites/sub_dir/settings.php')
        ->regex('/^\n\/\/ Start Toolkit settings block\..*?\/\/ End Too ... ttings block\.\n/sm')
        ->to('')
        [Simulator] Simulating File\Write('web/sites/sub_dir/settings.php')
        ->append()
        ->text(' ... ')
        [Simulator] Simulating Filesystem\FilesystemStack()
        ->chmod('web/sites/sub_dir', 509)

- command: 'drupal:settings-setup --force'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - file: 'web/sites/default/settings.php'
      contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->copy('web/sites/default/default.settings.php', 'web/sites/default/settings.php')
        [Simulator] Simulating File\Replace('web/sites/default/settings.php')
          ->regex('/^\n\/\/ Start Toolkit settings block\..*?\/\/ End Too ... ttings block\.\n/sm')
          ->to('')
        [Simulator] Simulating File\Write('web/sites/default/settings.php')
          ->append()
          ->text(' ... ')
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->chmod('web/sites/default', 509)

- command: 'drupal:settings-setup --skip-permissions-setup'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - file: 'web/sites/default/settings.php'
      contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->copy('web/sites/default/default.settings.php', 'web/sites/default/settings.php')
        [Simulator] Simulating File\Replace('web/sites/default/settings.php')
          ->regex('/^\n\/\/ Start Toolkit settings block\..*?\/\/ End Too ... ttings block\.\n/sm')
          ->to('')
        [Simulator] Simulating File\Write('web/sites/default/settings.php')
          ->append()
          ->text(' ... ')

- command: 'drupal:permissions-setup'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->chmod('web/sites/default', 509)

- command: 'drupal:permissions-setup --root=website --sites-subdir=websitesubdir'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->chmod('website/sites/websitesubdir', 509)

- command: 'drupal:permissions-setup'
  configuration:
    drupal:
      root: 'web'
      site:
        sites_subdir: 'sites_subdir'
  tokens: ~
  resources:
    - mkdir: /web/sites/sites_subdir/
    - touch: /web/sites/sites_subdir/settings.php
  expectations:
    - contains: |
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->chmod('web/sites/sites_subdir', 509)
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->chmod('web/sites/sites_subdir/settings.php', 436)

- command: 'drupal:disable-cache'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating Exec('./vendor/bin/drush')
          ->rawArg('-y')
          ->args(array ( ... ))
        [Simulator] Running ./vendor/bin/drush -y config-set system.performance css.preprocess 0
        [Simulator] Simulating Exec('./vendor/bin/drush')
          ->rawArg('-y')
          ->args(array ( ... ))
        [Simulator] Running ./vendor/bin/drush -y config-set system.performance js.preprocess 0
        [Simulator] Simulating Exec('./vendor/bin/drush')
          ->arg('cache:rebuild')
        [Simulator] Running ./vendor/bin/drush 'cache:rebuild'

- command: 'drupal:drush-setup'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating File\Write('web/drush/drush.yml')
            ->text('options:
            uri: 'http://web:8080/web'
        ')

- command: 'drupal:drush-setup --config-dir=website/drush'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating File\Write('website/drush/drush.yml')
            ->text('options:
            uri: 'http://web:8080/web'
        ')

- command: 'drupal:site-install --database-user=root --database-password=1234 --database-name=db'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array (
        ))
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->chmod('web/sites/default', 509)
        [Simulator] Simulating Exec('./vendor/bin/drush')
          ->args(array (
            0 => 'site:install',
            1 => 'minimal',
          ))
            ->options(array ( ... ), '=')
            ->option('-y')
        [Simulator] Running ./vendor/bin/drush 'site:install' minimal --root=/test/toolkit/tests/sandbox/DrupalCommandsTest/web/ --site-name='Site name' --site-mail=info@example.org --locale=en --account-mail=admin@example.org --account-name=admin --account-pass=admin --sites-subdir=default --db-url='mysql://root:1234@mysql:3306/db' -y
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array (
        ))

- command: 'drupal:site-install
              --root=website
              --base-url=base
              --site-name="The site name"
              --site-mail=info@example.org
              --account-mail=user@example.org
              --account-name=user
              --sites-subdir=web
              --site-profile=minimal
              --site-update=true
              --site-locale=fr
              --account-name=superadmin
              --account-password=12345
              --account-mail=superadmin@example.org
              --database-type=type
              --database-scheme=mysql
              --database-user=root
              --database-password=1234
              --database-host=mysql
              --database-port=3333
              --database-name=test'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array (
        ))
        [Simulator] Simulating Filesystem\FilesystemStack()
          ->chmod('website/sites/web', 509)
        [Simulator] Simulating Exec('./vendor/bin/drush')
          ->args(array (
            0 => 'site:install',
            1 => 'minimal',
          ))
            ->options(array ( ... ), '=')
            ->option('-y')
        [Simulator] Running ./vendor/bin/drush 'site:install' minimal --root=/test/toolkit/tests/sandbox/DrupalCommandsTest/website/ --site-name='The site name' --site-mail=info@example.org --locale=fr --account-mail=superadmin@example.org --account-name=superadmin --account-pass=12345 --sites-subdir=web --db-url='mysql://root:1234@mysql:3333/test' -y
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array (
        ))

- command: 'drupal:site-install --existing-config --skip-permissions-setup'
  configuration:
    drupal:
      site:
        generate_db_url: ~
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array (
        ))
        [Simulator] Simulating Exec('./vendor/bin/drush')
          ->args(array (
            0 => 'site:install',
            1 => 'minimal',
          ))
            ->options(array ( ... ), '=')
            ->option('-y')
        [Simulator] Running ./vendor/bin/drush 'site:install' minimal --root=/test/toolkit/tests/sandbox/DrupalCommandsTest/web/ --site-name='Site name' --site-mail=info@example.org --locale=en --account-mail=admin@example.org --account-name=admin --account-pass=admin --sites-subdir=default --existing-config -y
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array (
        ))

- command: 'drupal:site-pre-install'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array (
        ))

- command: 'drupal:site-pre-install'
  configuration:
    drupal:
        pre_install:
          - { task: 'process', source: 'behat.yml.dist', destination: 'behat.yml' }
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array ( ... ))

- command: 'drupal:site-post-install'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array (
        ))

- command: 'drupal:site-post-install'
  configuration:
    drupal:
       post_install:
         - './vendor/bin/drush en views -y'
  tokens: ~
  resources: []
  expectations:
    - contains: |
        [Simulator] Simulating EcEuropa\Toolkit\Task\Command\ConfigurationCommand(array (
          0 => './vendor/bin/drush en views -y',
        ))

- command: 'drupal:upgrade-status'
  configuration: []
  tokens: ~
  resources:
    - from: sample-d9-composer.lock
      to: composer.lock
  expectations:
    - contains: |
        >  Preparing the project to run upgrade_status.
        [Simulator] Simulating Composer\RequireDependency(null)
        ->dependency('drupal/upgrade_status', '^3')
        ->dev()
        [Simulator] Simulating Exec('./vendor/bin/drush en upgrade_status -y')
        [Simulator] Running ./vendor/bin/drush en upgrade_status -y
        [Simulator] Simulating ExecStack()
        ->exec('./vendor/bin/drush us-a --all')
        ->printOutput()
        ->silent(1)
        >  Congrats, looks like your project is Drupal 10 compatible.

- command: 'drupal:upgrade-status'
  configuration: []
  tokens: ~
  resources:
    - from: sample-d8-composer.lock
      to: composer.lock
  expectations:
    - contains: |
        >  Preparing the project to run upgrade_status.
        [Simulator] Simulating Composer\RequireDependency(null)
        ->dependency('drupal/upgrade_status', '^3')
        ->dev()
        [Simulator] Simulating Exec('./vendor/bin/drush en upgrade_status -y')
        [Simulator] Running ./vendor/bin/drush en upgrade_status -y
        [Simulator] Simulating ExecStack()
        ->exec('./vendor/bin/drush us-a --all')
        ->printOutput()
        ->silent(1)
        >  Congrats, looks like your project is Drupal 9 compatible.

- command: 'drupal:upgrade-status'
  configuration: []
  tokens: '[skip_d9c]'
  resources: []
  expectations:
    - empty: ~

- command: 'drupal:check-sanitisation-fields'
  configuration: []
  tokens: ~
  resources: []
  expectations:
    - contains: |
        Field types that should be sanitised:
        =====================================



        Fields that should be sanitised by their name:
        ==============================================

        * node-field_test_token (string)

- command: 'drupal:check-sanitisation-fields'
  configuration:
    drupal:
      sanitisation:
        types:
          - address
          - country
          - email
          - password
          - telephone
          - custom_type
        keywords:
          - _address
          - _auth
          - _country
          - _email
          - _ip
          - _mail
          - _password
          - _token
          - _new
  tokens: ~
  resources: []
  expectations:
    - string_contains: node-field_test_token (string)
    - string_contains: node-field_test_new (string)
    - string_contains: node-field_test_custom_type (custom_type)
    - not_string_contains: user-email (email)
    - not_string_contains: user-password (password)

- command: 'drupal:check-sanitisation-fields'
  configuration: []
  tokens: ~
  resources:
    - file: .opts.yml
      content: |
        dump_options:
          SANITIZE_OPTS: "--sanitize-email=sanitised@localhost.localdomain"
  expectations:
    - string_contains: node-field_test_token (string)
    - not_string_contains: user-email (email)

- command: 'drupal:check-sanitisation-fields'
  configuration: []
  tokens: ~
  resources:
    - file: .opts.yml
      content: |
        dump_options:
          SANITIZE_OPTS: "--sanitize-email=no"
  expectations:
    - string_contains: node-field_test_token (string)
    - string_contains: user-email (email)
    - string_contains: user-password (password)

- command: 'drupal:check-sanitisation-fields'
  configuration: []
  tokens: ~
  resources:
    - file: .opts.yml
      content: |
        dump_options:
          SANITIZE_OPTS: "--sanitize-password=no"
  expectations:
    - string_contains: node-field_test_token (string)
    - string_contains: user-email (email)
    - string_contains: user-password (password)

- command: 'drupal:check-sanitisation-classes'
  configuration: []
  tokens: ~
  resources:
    - mkdir: lib/modules/toolkit_module/src/Commands
  expectations:
    - string_contains: '[ERROR] Could not find any class implementing the interface'

- command: 'drupal:check-sanitisation-classes'
  configuration: []
  tokens: ~
  resources:
    - mkdir: lib/modules/toolkit_module/src/Commands
    - file: lib/modules/toolkit_module/src/Commands/ToolkitSanitizeCommand.php
      content: |
        <?php
        namespace Drupal\toolkit_module\Commands;
        class ToolkitSanitizeCommand extends \Drush\Commands\DrushCommands implements \Drush\Drupal\Commands\sql\SanitizePluginInterface {
          public function sanitize($result, \Consolidation\AnnotatedCommand\CommandData $commandData) {}
          public function messages(array &$messages, \Symfony\Component\Console\Input\InputInterface $input) {}
        }
  expectations:
    - string_contains: ToolkitSanitizeCommand

- command: 'drupal:check-requirements'
  configuration: []
  tokens: ''
  expectations:
    - string_contains: Website not installed, skipping
