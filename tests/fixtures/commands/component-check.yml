- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        {
          "name": "ec-europa/toolkit",
          "extra": { "composer-exit-on-patch-failure": true },
          "config": { "allow-plugins": { "ec-europa/toolkit-composer-plugin": true } }
        }
  expectations:
    - contains: |
        Checking Mandatory components.
        ==============================

        [Simulator] Running ./vendor/bin/drush status --format=json
        Website not installed, using config/sync/core.extension.yml file.
        Config file not found at config/sync/core.extension.yml.
        Package dropsolid_purge is mandatory and is not present on the project.

        Checking Recommended components.
        ================================

        >  This step is in reporting mode, skipping.

        Checking Insecure components.
        =============================

        [Simulator] Running composer audit --no-dev --locked --no-scripts --format=json
        >  Insecure components check passed.

        Checking Outdated components.
        =============================

        [Simulator] Running composer outdated --no-dev --locked --direct --minor-only --no-scripts --format=json
        >  Outdated components check passed.

        Checking Abandoned components.
        ==============================

        [Simulator] Running composer outdated --no-dev --locked --direct --minor-only --no-scripts --format=json
        >  Abandoned components check passed.

        Checking Unsupported components.
        ================================

        [Simulator] Running ./vendor/bin/drush status --format=json
        Website not installed, skipping.

        Checking Evaluation components.
        ===============================

        Packages rejected/restricted:
        The use of drupal/codesnippet:1.8 is restricted.
        The use of drupal/github_connect:2.0.0-alpha1 is restricted.
        The use of drupal/responsive_tables_filter:1.17 is restricted.
        The use of drupal/restui:1.21 is rejected.
        In the case you want to use one of the modules listed as restricted, please open a ticket to Quality Assurance indicating the use case for evaluation and more information.


        Checking Development components.
        ================================

        >  Development components check passed.


        Checking Composer components.
        =============================

        >  Composer validation check passed.


        Checking Configuration components.
        ==================================

        >  Project configuration check passed.


        Results:
        ========

        ----------------------------- --------
         Mandatory module check        failed
         Recommended module check      passed
         Insecure module check         passed
         Outdated module check         passed
         Abandoned module check        passed
         Unsupported module check      passed
         Evaluation module check       failed
         Development module check      passed
         Composer validation check     passed
         Project configuration check   passed
        ----------------------------- --------

        [ERROR] Failed the components check, please verify the report and update the
        project.

        See the list of packages at

        https://digit-dqa.fpfis.tech.ec.europa.eu/package-reviews.

        ! [NOTE] It is possible to bypass the insecure, outdated, abandoned and
        !        unsupported checks:
        !
        !        - Using commit message to skip Insecure and/or Outdated check:
        !
        !           - Include in the message: [SKIP-INSECURE] and/or [SKIP-OUTDATED]
        !
        !
        !
        !        - Using the configuration in the runner.yml.dist as shown below to
        !        skip Outdated, Abandoned or Unsupported:
        !
        !           toolkit:
        !
        !             components:
        !
        !               outdated:
        !
        !                 check: false
        !
        !               abandoned:
        !
        !                 check: false
        !
        !               unsupported:
        !
        !                 check: false

- command: 'toolkit:component-check'
  configuration:
    toolkit:
      components:
        outdated:
          check: false
        abandoned:
          check: false
        unsupported:
          check: false
  tokens: ''
  resources:
    - touch: composer.json
    - from: sample-composer.lock
      to: composer.lock
  expectations:
    - string_contains: Abandoned module check        passed (Skipping)
    - string_contains: Outdated module check         passed (Skipping)
    - string_contains: Unsupported module check      passed (Skipping)

- command: 'toolkit:component-check --test-command'
  configuration:
    toolkit:
      components:
        outdated:
          check: false
  tokens: '[skip_insecure][skip_d9c]'
  resources:
    - touch: composer.json
    - from: sample-composer.lock
      to: composer.lock
  expectations:
    - string_contains: Insecure module check         passed (Skipping)
    - string_contains: Outdated module check         passed (Skipping)

- command: 'toolkit:component-check'
  configuration:
    toolkit:
      clean:
        config_file: core.extensions-good.yml
  tokens: ''
  resources:
    - from: sample-core.extensions-good.yml
      to: core.extensions-good.yml
    - file: composer.json
      content: |
        {
          "name": "ec-europa/toolkit",
          "extra": { "composer-exit-on-patch-failure": true },
          "config": { "allow-plugins": { "ec-europa/toolkit-composer-plugin": true } }
        }
    - from: sample-composer.lock
      to: composer.lock
  expectations:
    - string_contains: Mandatory module check        passed
    - string_contains: Recommended module check      passed
    - string_contains: Insecure module check         passed
    - string_contains: Outdated module check         passed
    - string_contains: Abandoned module check        passed
    - string_contains: Unsupported module check      passed
    - string_contains: Evaluation module check       failed
    - string_contains: Development module check      passed
    - string_contains: Composer validation check     passed

- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - touch: composer.json
    - from: sample-internal-dependency.lock
      to: composer.lock
  expectations:
    - string_contains: Evaluation module check       passed

- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
    - file: composer.lock
      content: |
        { "packages": [
          { "name": "test/package", "type": "library", "version": "dev-1.0.0" },
          { "name": "test/package2", "type": "library", "version": "1.0.0-dev" },
          { "name": "test/module", "type": "drupal-custom-module", "version": "1.0.0-dev" }
        ] }
  expectations:
    - string_contains: Package test/package:dev-1.0.0 cannot be used in dev version.
    - string_contains: Package test/package2:1.0.0-dev cannot be used in dev version.
    - not_string_contains: Package test/module:1.0.0-dev cannot be used in dev version.
    - string_contains: Plugin ec-europa/toolkit-composer-plugin must be allowed
    - string_contains: Composer validation check     failed

- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - file: composer.json
      content: |
        { "extra": { "enable-patching": true } }
    - file: composer.lock
      content: |
        { "packages": [ { "name": "test/package", "type": "library", "version": "1.0.0" } ] }
  expectations:
    - string_contains: The composer property 'extra.enable-patching' cannot be set to true.
    - string_contains: Composer validation check     failed

- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - file: composer.json
      content: |
        {
          "name": "ec-europa/toolkit",
          "extra": { "enable-patching": false, "composer-exit-on-patch-failure": true },
          "config": { "allow-plugins": { "ec-europa/toolkit-composer-plugin": true } }
        }
    - file: composer.lock
      content: |
        { "packages": [ { "name": "test/package", "type": "library", "version": "1.0.0" } ] }
  expectations:
    - not_string_contains: extra.enable-patching
    - string_contains: Composer validation check     passed

- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - file: composer.json
      content: |
        { "extra": { "composer-exit-on-patch-failure": false } }
    - file: composer.lock
      content: |
        { "packages": [ { "name": "test/package", "type": "library", "version": "1.0.0" } ] }
  expectations:
    - string_contains: The composer property 'extra.composer-exit-on-patch-failure' must be set to true.
    - string_contains: Composer validation check     failed

- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - file: composer.json
      content: |
        {
          "name": "ec-europa/toolkit",
          "extra": { "composer-exit-on-patch-failure": true },
          "config": { "allow-plugins": { "ec-europa/toolkit-composer-plugin": true } }
        }
    - file: composer.lock
      content: |
        { "packages": [ { "name": "test/package", "type": "library", "version": "1.0.0" } ] }
  expectations:
    - not_string_contains: extra.composer-exit-on-patch-failure
    - string_contains: Composer validation check     passed

- command: 'toolkit:component-check'
  configuration:
    toolkit:
      components:
        composer:
          drupal_patches: true
  tokens: ''
  resources:
    - file: composer.lock
      content: |
        { "packages": [ { "name": "test/dummy", "type": "library", "version": "1.0.0" } ] }
    - file: composer.json
      content: |
        {
          "name": "toolkit",
          "config": { "allow-plugins": { "ec-europa/toolkit-composer-plugin": true } },
          "extra": {
            "composer-exit-on-patch-failure": true,
            "patches": {
              "local/package": [ "./resources/local.patch" ],
              "drupal/package": [
                "https://www.drupal.org/files/issues/2023-01-01/12345-1.patch",
                "https://drupal.org/files/issues/2023-01-01/12345-2.patch",
                "http://drupal.org/files/issues/2023-01-01/12345-3.patch"
              ]
            }
          }
        }
  expectations:
    - not_string_contains: The patch './resources/local.patch' is not valid
    - not_string_contains: The patch 'https://www.drupal.org/files/issues/2023-01-01/12345-1.patch' is not valid
    - not_string_contains: The patch 'https://drupal.org/files/issues/2023-01-01/12345-2.patch' is not valid
    - not_string_contains: The patch 'http://drupal.org/files/issues/2023-01-01/12345-3.patch' is not valid
    - string_contains: Composer validation check     passed

- command: 'toolkit:component-check'
  configuration:
    toolkit:
      components:
        composer:
          drupal_patches: false
  tokens: ''
  resources:
    - file: composer.lock
      content: |
        { "packages": [ { "name": "test/dummy", "type": "library", "version": "1.0.0" } ] }
    - file: composer.json
      content: |
        {
          "name": "toolkit",
          "extra": {
            "composer-exit-on-patch-failure": true,
            "patches": {
              "local/package": [ "./resources/local.patch" ],
              "web/package": [ "http://example.com/test-package.patch" ],
              "drupal/package": [
                "https://www.drupal.org/files/issues/2023-01-01/12345-1.patch",
                "https://drupal.org/files/issues/2023-01-01/12345-2.patch",
                "http://drupal.org/files/issues/2023-01-01/12345-3.patch"
              ]
            }
          }
        }
  expectations:
    - not_string_contains: The patch './resources/local.patch' is not valid
    - string_contains: The patch 'http://example.com/test-package.patch' is not valid
    - string_contains: The patch 'https://www.drupal.org/files/issues/2023-01-01/12345-1.patch' is not valid
    - string_contains: The patch 'https://drupal.org/files/issues/2023-01-01/12345-2.patch' is not valid
    - string_contains: The patch 'http://drupal.org/files/issues/2023-01-01/12345-3.patch' is not valid
    - string_contains: Composer validation check     failed

- command: 'toolkit:component-check'
  configuration:
    toolkit:
      project_id: digit-dqa
  tokens: ''
  resources:
    - touch: composer.json
    - file: composer.lock
      content: |
        { "packages": [ { "name": "drupal/codesnippet", "type": "drupal-module", "version": "1.0.0" } ] }
  expectations:
    - string_contains: The package drupal/codesnippet is authorised for the project digit-dqa

- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - touch: composer.json
    - file: composer.lock
      content: |
        { "packages": [ { "name": "drupal/pipeline", "type": "drupal-module", "version": "1.0.0" } ] }
    - file: .toolkit-mock/0.0.5/api/v1/project/ec-europa/toolkit/information.json
      content: |
        [ { "name":"toolkit", "type": "Openeuropa", "environments": [{ "profile": "minimal", "type": "Production" }] }]
    - file: .toolkit-mock/0.0.5/api/v1/toolkit-requirements.json
      content: |
        { "php_version":"8.1", "toolkit": "^3.7.2|^9.14|^10.4", "drupal": "^7.96|^10.1.4|^10.0.11", "vendor_list": [ "drupal" ] }
    - file: .toolkit-mock/0.0.5/api/v1/package-reviews.json
      content: |
        [ {
          "type": "drupal-module",
          "machine_name": "pipeline",
          "name": "drupal/pipeline",
          "full_name": "drupal/pipeline",
          "version_drupal": "8.x-1.0-alpha3",
          "version": "^1.0-alpha3",
          "whitelist": "^1.0-alpha3",
          "blacklist": false,
          "secure": false,
          "status": "rejected",
          "restricted_use": "1",
          "allowed_profiles": "minimal",
          "allowed_project_types": "Openeuropa",
          "mandatory": "0",
          "mandatory_date": false,
          "core": "8.x",
          "cores": "8.x",
          "usage": "Free",
          "nid": "10889",
          "dev_component": "false"
        } ]
  expectations:
    - string_contains: The package drupal/pipeline is authorised for the type of project Openeuropa

- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - touch: composer.json
    - file: composer.lock
      content: |
        { "packages": [ { "name": "drupal/pipeline", "type": "drupal-module", "version": "1.0.0" } ] }
    - file: .toolkit-mock/0.0.5/api/v1/project/ec-europa/toolkit/information.json
      content: |
        [ { "name": "toolkit", "type": "Openeuropa", "environments": [{ "profile":"minimal", "type":"Production" }] } ]
    - file: .toolkit-mock/0.0.5/api/v1/toolkit-requirements.json
      content: |
        { "php_version": "8.1", "toolkit": "^3.7.2|^9.14|^10.4", "drupal": "^7.96|^10.1.4|^10.0.11", "vendor_list": [ "drupal" ] }
    - file: .toolkit-mock/0.0.5/api/v1/package-reviews.json
      content: |
        [ {
          "type": "drupal-module",
          "machine_name": "pipeline",
          "name": "drupal/pipeline",
          "full_name": "drupal/pipeline",
          "version_drupal": "8.x-1.0-alpha3",
          "version": "^1.0-alpha3",
          "whitelist": "^1.0-alpha3",
          "blacklist": false,
          "secure": false,
          "status": "rejected",
          "restricted_use": "1",
          "allowed_profiles": "minimal",
          "allowed_project_types": false,
          "mandatory": "0",
          "mandatory_date": false,
          "core": "8.x",
          "cores": "8.x",
          "usage": "Free",
          "nid": "10889",
          "dev_component": "false"
        } ]
  expectations:
    - string_contains: The package drupal/pipeline is authorised for the profile minimal

- command: 'toolkit:component-check'
  configuration: [ ]
  tokens: ''
  resources:
    - file: composer.lock
      content: |
        { "packages": [ { "name": "ec-europa/toolkit" } ] }
    - file: .toolkit-mock/0.0.5/api/v1/package-reviews.json
      content: |
        [ {
          "type": "drupal-module",
          "machine_name": "mandatory",
          "name": "drupal/mandatory",
          "full_name": "drupal/mandatory",
          "mandatory": "1"
        }, {
          "type": "module",
          "machine_name": "pipeline",
          "name": "drupal/pipeline",
          "full_name": "drupal/pipeline",
          "mandatory": "1"
        } ]
  expectations:
    - string_contains: Package mandatory is mandatory and is not present on the project
    - not_string_contains: Package pipeline is mandatory and is not present on the project

- command: 'toolkit:component-check'
  configuration:
    toolkit:
      components:
        composer:
          forbidden:
            autoload:
              psr-4:
                - 'MyForbiddenVendor\MyProject\'
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        {
          "name": "toolkit",
          "scripts": {
            "post-root-package-install": [
              "./allowed-script-01.sh",
              "Subsite\\composer\\SetupWizard::setup"
            ],
            "post-install-cmd": [
              "./allowed-script-02.sh",
              "DrupalComposer\\DrupalScaffold\\Plugin::scaffold"
            ]
          },
          "autoload": {
            "classmap": [
              "scripts/composer/SetupWizard.php"
            ],
            "psr-4": {
              "MyForbiddenVendor\\MyProject\\": "./src/"
            }
          }
        }
  expectations:
    - not_string_contains: ./allowed-script-01.sh
    - not_string_contains: ./allowed-script-02.sh
    - string_contains: MyForbiddenVendor\MyProject\
    - string_contains: DrupalComposer\DrupalScaffold\Plugin::scaffold
    - string_contains: Subsite\composer\SetupWizard::setup
    - string_contains: scripts/composer/SetupWizard.php

- command: 'toolkit:component-check'
  configuration: []
  tokens: ''
  resources:
    - file: composer.lock
      content: |
        { "packages": [
          { "name": "phpro/grumphp", "type": "composer-plugin", "version": "v2.4.0" }
        ] }
    - touch: composer.json
    - touch: .env
    - touch: grumphp.yml.dist
    - touch: allowed-file.ext
  expectations:
    - not_string_contains: allowed-file.ext
    - not_string_contains: grumphp.yml.dist file was detected
    - string_contains: .env file was detected

- command: 'toolkit:component-check'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - touch: composer.json
    - touch: grumphp.yml.dist
  expectations:
    - string_contains: grumphp.yml.dist file was detected

- command: 'toolkit:component-check'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - touch: composer.json
    - file: docker-compose.yml
      content: |
        services:
          web:
            environment:
              NEXTCLOUD_USER:
              NEXTCLOUD_PASS:
              ASDA_URL:
              ASDA_USER:
              ASDA_PASSWORD:
              QA_API_BASIC_AUTH:
  expectations:
    - not_string_contains: NEXTCLOUD_USER
    - not_string_contains: NEXTCLOUD_PASS
    - string_contains: ASDA_URL
    - string_contains: ASDA_USER
    - string_contains: ASDA_PASSWORD
    - string_contains: QA_API_BASIC_AUTH

- command: 'toolkit:component-check'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - touch: composer.json
    - file: .env
      content: |
        # Use special characters like `~/.bashrc` or (parentheses).
        # This is the user for the Nextcloud.
        NEXTCLOUD_USER=
        NEXTCLOUD_PASS=
        # This is the deprecated ASDA user.
        ASDA_USER=
        ASDA_PASSWORD=
        QA_API_BASIC_AUTH=
  expectations:
    - not_string_contains: NEXTCLOUD_USER
    - not_string_contains: NEXTCLOUD_PASS
    - string_contains: ASDA_USER
    - string_contains: ASDA_PASSWORD
    - string_contains: QA_API_BASIC_AUTH

- command: 'toolkit:component-check'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - touch: composer.json
    - file: .env.dist
      content: |
        NEXTCLOUD_USER=
        NEXTCLOUD_PASS=
        ASDA_USER=
        ASDA_PASSWORD=
        QA_API_BASIC_AUTH=
  expectations:
    - not_string_contains: NEXTCLOUD_USER
    - not_string_contains: NEXTCLOUD_PASS
    - string_contains: ASDA_USER
    - string_contains: ASDA_PASSWORD
    - string_contains: QA_API_BASIC_AUTH

- command: 'toolkit:component-check'
  configuration: []
  tokens: ''
  resources:
    - touch: composer.json
    - file: composer.lock
      content: |
        { "packages": [
          { "name": "phpstan/extension-installer", "type": "composer-plugin", "version": "1.2.0" }
        ] }
    - file: phpstan.neon
      content: |
        parameters:
          level: 5
        includes:
          - vendor/phpstan/phpstan-deprecation-rules/rules.neon
  expectations:
    - string_contains: When using phpstan/extension-installer you should not manually include

- command: 'toolkit:component-check'
  configuration: []
  tokens: ''
  resources:
    - file: composer.lock
      content: |
        { "packages": [
          { "name": "cweagans/composer-patches", "type": "composer-plugin", "version": "1.7.3" },
          { "name": "dealerdirect/phpcodesniffer-composer-installer", "type": "composer-plugin", "version": "v1.0.0" }
        ] }
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "config": { "allow-plugins": { "cweagans/composer-patches": true, "dealerdirect/phpcodesniffer-composer-installer": false, "phpstan/extension-installer": true } } }
    - mkdir: /vendor/composer/
    - file: /vendor/composer/installed.json
      content: |
        { "packages": [
          { "name": "cweagans/composer-patches", "type": "composer-plugin", "version": "1.7.3" },
          { "name": "dealerdirect/phpcodesniffer-composer-installer", "type": "composer-plugin", "version": "v1.0.0" }
        ] }
  expectations:
    - not_string_contains: "config.allow-plugins: cweagans/composer-patches"
    - not_string_contains: "config.allow-plugins: dealerdirect/phpcodesniffer-composer-installer"
    - string_contains: "config.allow-plugins: phpstan/extension-installer"

- command: 'check:mandatory'
  configuration: []
  tokens: ''
  resources:
    - from: sample-core.extensions-good.yml
      to: config/sync/core.extension.yml
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
  expectations:
    - string_contains: Mandatory components check passed

- command: 'check:recommended'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
  expectations:
    - empty: ~

- command: 'check:insecure'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
  expectations:
    - string_contains: Insecure components check passed

- command: 'check:outdated'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
  expectations:
    - string_contains: Outdated components check passed

- command: 'check:abandoned'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
  expectations:
    - string_contains: Abandoned components check passed

- command: 'check:unsupported'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
  expectations:
    - string_contains: Website not installed, skipping

- command: 'check:evaluation'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
  expectations:
    - string_contains: Packages rejected/restricted

- command: 'check:development'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
  expectations:
    - string_contains: Development components check passed

- command: 'check:configuration'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        { "name": "ec-europa/toolkit", "extra": { "composer-exit-on-patch-failure": true } }
  expectations:
    - string_contains: Project configuration check passed

- command: 'check:composer'
  configuration: []
  tokens: ''
  resources:
    - from: sample-composer.lock
      to: composer.lock
    - file: composer.json
      content: |
        {
          "name": "ec-europa/toolkit",
          "extra": { "composer-exit-on-patch-failure": true },
          "config": { "allow-plugins": { "ec-europa/toolkit-composer-plugin": true } }
        }
  expectations:
    - string_contains: Composer validation check passed
