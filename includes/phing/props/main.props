# ------------------------------------------------------------------------------
# Main properties of Toolkit. Most of these are build and development related.
# ------------------------------------------------------------------------------

# Binaries.
# ---------
project.bin.composer = composer.phar
project.bin.git = git

# Temporary folders and resources.
# --------------------------------
project.docroot = /var/www/html
project.tmp.devel.make = ${project.tmp.dir}/devel.make
project.tmp.dir = ${project.basedir}/.tmp

# Subsite configuration.
# ----------------------
project.id = myproject
project.install.modules = myproject_core
project.name = My Project
project.theme.default = ec_resp
project.type = subsite
project.url.base = http://web:8080
project.url.production = https://ec.europa.eu/${project.id}

# Development modules.
# --------------------
devel.mdls.dir = devel
devel.mdls.en = devel context field_ui maillog stage_file_proxy views_ui
devel.mdls.core.en = 

# Development variables.
# ----------------------
devel.vars.error_level = 2
devel.vars.maillog_send = 0
devel.vars.preprocess_css = 0
devel.vars.preprocess_js = 0
devel.vars.stage_file_proxy_hotlink = 1
devel.vars.stage_file_proxy_origin = ${project.url.production}
devel.vars.stage_file_proxy_origin_dir = sites/${project.id}/files
devel.vars.views_show_additional_queries = 1
devel.vars.views_ui_show_performance_statistics = 1
devel.vars.views_ui_show_sql_query = 1

# Debugging configuration.
# ------------------------
drush.color = 1
drush.verbose = FALSE
drush.rr.enabled = 1
drush.rr.options = --fire-bazooka --no-cache-clear
drush.rr.disable = '', ''

# Docker. (TODO)
# ------------------------
docker.project.id = environment

# Database download settings.
# ---------------------------
db.dl.filename =
db.dl.dir = fpfis/files-for/automate_dumps
db.dl.host = webgate.ec.europa.eu
db.dl.url = ${db.dl.host}/${db.dl.dir}/${project.id}/
db.dl.username =
db.dl.password =

# Database connection settings.
# -----------------------------
db.type = mysql
db.name = ${project.id}
db.user = root
db.password =
db.host = 127.0.0.1
db.port = 3306
db.url = ${db.type}://${db.user}:${db.password}@${db.host}:${db.port}/${db.name}
db.prefix =

# Solr configuration.
# -------------------
solr.enable = 1
solr.scheme = http
solr.host = 127.0.0.1
solr.port = 8983
solr.path = /solr
solr.type = d7_apachesolr
solr.url = ${solr.scheme}://${solr.host}:${solr.port}${solr.path}/${solr.type}

# Admin configuration.
# --------------------
admin.email = ${admin.username}@example.com
admin.password = pass
admin.username = admin

# Platform configuration.
# -----------------------
profile = multisite_drupal_standard
profile.name = ${profile}
profile.core = 7.x
profile.core.make = ${resources.dir}/drupal-core.make
profile.make = ${resources.dir}/${profile}.make
platform.package = deploy-package-${platform.package.reference}.tar.gz
platform.package.db.cache = 1
platform.package.provider = git-hub
platform.package.provider.token = # TODO: Github API limit.
platform.package.repository = ec-europa/platform-dev
platform.package.version = 2.5
platform.multisite.mode = 1

# Theme configuration (deploy props?)
# --------------------
theme.ecl.version = v0.18.0
theme.ec_europa.version = 0.0.6
theme.atomium.repo.url = https://github.com/ec-europa/atomium.git
theme.atomium.repo.branch = 7.x-2.x
theme.europa.repo.url = https://github.com/ec-europa/ec_europa.git
theme.europa.repo.branch = master

# Project resources.
# ------------------
lib.dir = ${project.basedir}/lib
lib.dir.libraries = ${lib.dir}/libraries
lib.dir.modules = ${lib.dir}/modules
lib.dir.modules.custom = ${lib.dir.modules}/custom
lib.dir.modules.features = ${lib.dir.modules}/features
lib.dir.profiles = ${lib.dir}/profiles
lib.dir.profiles.profile = ${lib.dir.profiles}/${profile}
lib.dir.source = ${lib.dir}/src
lib.dir.themes = ${lib.dir}/themes
lib.dir.translations = ${lib.dir}/translations

resources.dir = ${project.basedir}/resources
resources.dir.composer.json = ${resources.dir}/composer.json
resources.dir.composer.lock = ${resources.dir}/composer.lock
resources.dir.favicon.ico = ${resources.dir}/favicon.ico
resources.dir.devel.make = ${resources.dir}/devel.make
resources.dir.site.make = ${resources.dir}/site.make

tests.dir = ${project.basedir}/tests

# Build folders.
# --------------
build.dev = build
build.dist = dist
build.site = default

# Build halts.
# ----------
build.haltonerror.dir.copy = true
build.haltonerror.props.validate = false

# Platform build resources.
# -------------------------
build.platform.dir = ${project.basedir}/${build.dev}
build.platform.dir.settings = ${build.platform.dir.sites}/default
build.platform.dir.sites = ${build.platform.dir}/sites
build.platform.dir.profile = ${build.platform.dir.profiles}/${profile}
build.platform.dir.profile.themes = ${build.platform.dir.profile}/themes
build.platform.dir.profiles = ${build.platform.dir}/profiles
build.platform.composer.json = ${build.platform.dir}/composer.json
build.platform.composer.lock = ${build.platform.dir}/composer.lock
build.platform.favicon.ico = ${build.platform.dir}/favicon.ico
build.platform.htaccess.append.text =

# Subsite build resources.
# ------------------------
build.subsite.composer.json = ${build.subsite.dir}/composer.json
build.subsite.composer.lock = ${build.subsite.dir}/composer.lock
build.subsite.dir = ${build.platform.dir.sites}/${build.site}
build.subsite.dir.files = sites/${build.site}/files
build.subsite.dir.libraries = ${build.subsite.dir}/libraries
build.subsite.dir.modules = ${build.subsite.dir}/modules
build.subsite.dir.modules.contrib = ${build.subsite.dir.modules}/contrib
build.subsite.dir.modules.custom = ${build.subsite.dir.modules}/custom
build.subsite.dir.modules.features = ${build.subsite.dir.modules}/features
build.subsite.dir.source = ${build.subsite.dir}/src
build.subsite.dir.themes = ${build.subsite.dir}/themes
build.subsite.dir.tmp = sites/${build.site}/tmp

# platform build files and directories.
# -----------------------------------------
build.dist.composer.json = ${build.dist.dir}/composer.json
build.dist.composer.lock = ${build.dist.dir}/composer.lock
build.dist.dir = ${project.basedir}/${build.dist}
build.dist.dir.modules = ${build.dist.dir}/modules
build.dist.dir.modules.custom = ${build.dist.dir.modules}/custom
build.dist.dir.modules.features = ${build.dist.dir.modules}/features
build.dist.dir.profile = ${build.dist.dir.profiles}/${profile}
build.dist.dir.profiles = ${build.dist.dir}/profiles
build.dist.dir.source = ${build.dist.dir}/src
build.dist.dir.themes = ${build.dist.dir}/themes

# Temporary build files and directories.
# -----------------------------------------
build.tmp.dir = ${project.tmp.dir}/sites/${build.site}
build.tmp.dir.files = ${build.tmp.dir}/files

# Shared paths.
# -------------
share.path = /tmp
share.name = toolkit
share.path.global = ${share.path}/${share.name}
share.path.composer = ${share.path.global}/composer
share.path.platform = ${share.path.global}/platform
share.path.subsites = ${share.path.global}/subsites
share.path.composer.packages = ${share.path.composer}/packages
share.path.composer.packages.shared = ${share.path.composer.packages}/shared
share.path.platform.packages = ${share.path.platform}/packages
share.path.platform.packages.database = ${share.path.platform.packages}/database
share.path.platform.packages.deploy = ${share.path.platform.packages}/deploy
share.path.platform.packages.test = ${share.path.platform.packages}/test
share.path.subsites.packages = ${share.path.subsites}/packages
share.path.subsites.packages.database = ${share.path.subsites.packages}/database
share.path.subsites.packages.deploy = ${share.path.subsites.packages}/deploy
share.path.subsites.packages.test = ${share.path.subsites.packages}/test

# Composer hook phingcall target lists. Space separated only.
# -----------------------------------------------------------
composer.hook.post.install = build-toolkit
composer.hook.post.update =
composer.hook.pre.install =
composer.hook.pre.update =

# Flickr configuration.
# ---------------------
flickr.key = foobar
flickr.secret = bas

# Integration configuration.
# --------------------------
integration.server.port = 8888

# Varnish configuration.
# ----------------------
varnish.server.port = 8888

# Drush Context configuration.
# ----------------------------
drush.db.dump = ${build.platform.dir}/dump.sql

# Drush aliases configuration.
# ----------------------------
drush.alias.default = ${build.site}
drush.alias.docker = docker

# Drupal installation settings.
# ----------------------------
drupal.update.free.access = FALSE
drupal.hash.salt =

# Bactrack configuration
# ----------------------------
backtrac.file = ${project.tmp.dir}/bactrack.json
backtrac.compare.mode = compare_itself


