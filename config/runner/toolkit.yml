toolkit:
  project_id: toolkit
  tmp_folder: '/cache'
  clean:
    config_file: 'config/sync/core.extension.yml'
  clone:
    dumpfile: 'mysql.gz'
    myloader: '/scripts/importdb.sh'
    mydumper: '/scripts/backupdb.sh'
    type: 'nextcloud'
    show_progress: false
    nextcloud:
      # Nextcloud supports the following services: mysql, virtuoso, solr.
      services: 'mysql'
      url: 'files.fpfis.tech.ec.europa.eu/remote.php/dav/files'
      admin: false
      vendor: 'ec-europa'
      source: 'reference'
    custom:
      url: ~
      user: ~
      pass: ~
  components:
    outdated:
      check: true
      # Ignore packages in specific version, example:
      # - name: drupal/webform
      #   version: 1.1.1
      ignores: [ ]
    abandoned:
      check: true
    unsupported:
      check: true
    composer:
      drupal_patches: true
      forbidden:
        # It checks forbidden entries against VALUES if a KEY of an array in 'composer.json' is numeric, otherwise it checks against the KEY itself.
        autoload:
          classmap:
            - 'scripts/composer/SetupWizard.php'
          # Example of forbidden entry by non-numeric key:
          # psr-4:
          #   - 'MyVendor\MyProject\'
          #   - 'MyVendor\MyProject2\'
        scripts:
          post-root-package-install:
            - 'Subsite\composer\SetupWizard::setup'
          post-install-cmd:
            - 'DrupalComposer\DrupalScaffold\Plugin::scaffold'
    configuration:
      drupal:
        # Filter errors by title.
        requirements:
          - "Trusted Host Settings"
      validations:
        - message: 'When using phpstan/extension-installer you should not manually include the extensions in the phpstan.neon file, please remove the includes.'
          callback: 'EcEuropa\Toolkit\Callbacks\ConfigurationCallbacks::validatePhpStan'
          blocker: true
        - message: "The .env file was detected!\n In order to avoid loading .env file in ACC or PROD environments, please rename it to something like .env.dist\n The file belongs to your application. You should guarantee that is not being called into any point of your Drupal site. If you are only calling it in docker-compose.yml, it's recommended to drop entirely the file and declare the environment variables straight into docker-compose.yml file."
          callback: 'file_exists'
          params:
            - .env
          blocker: true
          expectation: true
        - message: 'The grumphp.yml.dist file was detected but the package is not being required by your project, please remove the file.'
          callback: 'EcEuropa\Toolkit\Callbacks\ConfigurationCallbacks::validateGrumPhp'
          blocker: true
  deploy:
    sequence_file: '.opts.yml'
    sequence_key: 'upgrade_commands'
  install:
    clone:
      commands:
        before: [ ]
        after: [ ]
    clean:
      commands:
        before: [ ]
        after: [ ]
  build:
    dist:
      root: 'dist'
      keep:
        - ${drupal.root}
        - config
        - vendor
        - composer.lock
        - composer.json
      remove:
        - CHANGELOG.md
        - CHANGELOG.txt
        - COPYRIGHT.txt
        - INSTALL.mysql.txt
        - INSTALL.pgsql.txt
        - install.php
        - INSTALL.sqlite.txt
        - INSTALL.txt
        - LICENSE.txt
        - MAINTAINERS.txt
        - UPDATE.txt
        - README.txt
        - node_modules
        - .sass-cache
      commands: [ ]
    dev:
      commands: [ ]
    htaccess:
      block:
        file-match: '(README\.(md|txt)|CHANGELOG\.(md|txt))$'
    custom-code-folder: 'lib'
    npm:
      theme-task-runner: ecl-builder
      packages: '@ecl/builder @ecl/preset-ec @ecl/preset-eu @ecl/preset-reset'
      ecl-command: 'styles scripts'
  scss:
    validate: 'false'
  invalid-versions:
    - 1.x
    - 2.x
  install_dependencies: true
  notifications:
    show: true
  patches:
    dir: resources/patches
    composer: composer.json
    # Set to true when using cweagans/composer-patches:^2, this will
    # allow patches from dependencies to be listed and downloaded.
    dependencies: false
  hooks:
    # A relative path from the project root where the hooks are located.
    dir: 'resources/git/hooks'
    active:
      # Check for modified files and run PHPcs.
      - pre-commit
      # Check if the commit message is properly formatted.
      - commit-msg
      # Run the PHPcs and linters (configurable).
      - pre-push
    commit-msg:
      example: 'AB1C-123: The commit message.'
      conditions:
        - message: 'The commit message must start with the JIRA issue number.'
          regex: /^[A-Z0-9]+\-\d+/
        - message: 'The JIRA issue number must be followed by a colon and space.'
          regex: /^[A-Z0-9]+\-\d+:\ /
        - message: 'The subject must start with capital letter.'
          regex: /^[A-Z0-9]+\-\d+:\ [A-Z]/
        - message: 'The commit message must end with a period.'
          regex: /\.$/
    pre-push:
      commands:
        - toolkit:test-phpcs
        - toolkit:test-phpmd
        - toolkit:lint-php
        - toolkit:opts-review
