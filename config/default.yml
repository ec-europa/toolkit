runner:
  bin_dir: './vendor/bin'
  bin_node_dir: './node_modules/.bin'
drupal:
  root: 'web'
  base_url: 'http://web:8080/web'
  virtual_host: 'http://web:8080/web'
  root_absolute: ~
  # Drupal site information.
  site:
    name: 'Site name'
    mail: 'info@example.org'
    profile: 'minimal'
    update: 'false'
    locale: 'en'
    sites_subdir: 'default'
    existing_config: 'false'
    generate_db_url: 'false'
    skip_permissions_setup: 'false'
    settings_override_file: 'settings.override.php'
  # Drupal Administrator account information.
  account:
    name: 'admin'
    password: 'admin'
    mail: 'admin@example.org'
  # Drupal database settings.
  database:
    scheme: 'mysql'
    host: 'mysql'
    port: '3306'
    name: ''
    user: ''
    password: ''
  # Following lines will be converted in PHP and appended to default.settings.php.
  settings: [ ]
  drush:
    options:
      uri: '${drupal.base_url}'
  # List of shell commands to be before and after the site installation.
  # You can use same syntax as the "commands:", check the documentation for more.
  # Configuration token replacement is supported too.
  pre_install: [ ]
  post_install: [ ]
toolkit:
  tmp_folder: '/cache'
  clean:
    config_file: 'config/sync/core.extension.yml'
  clone:
    asda_services: 'mysql'
    asda_type: 'default'
    asda_url: 'webgate.ec.europa.eu/fpfis/files-for/automate_dumps/${toolkit.project_id}'
    nextcloud_url: 'files.fpfis.tech.ec.europa.eu/remote.php/dav/files'
    nextcloud_admin: false
    asda_vendor: 'ec-europa'
    asda_source: 'reference'
  components:
    outdated:
      check: true
  deploy:
    config_file: 'config/sync/core.extension.yml'
    sequence_file: '.opts.yml'
    sequence_key: 'upgrade_commands'
  install:
    clone:
      commands: [ ]
  build:
    dist:
      root: 'dist'
      keep:
        - ${drupal.root}
        - config
        - vendor
        - composer.lock
        - composer.json
      remove:
        - CHANGELOG.txt
        - COPYRIGHT.txt
        - INSTALL.mysql.txt
        - INSTALL.pgsql.txt
        - install.php
        - INSTALL.sqlite.txt
        - INSTALL.txt
        - LICENSE.txt
        - MAINTAINERS.txt
        - UPDATE.txt
        - README.txt
      commands: [ ]
    dev:
      commands: [ ]
    custom-code-folder: 'lib'
    npm:
      theme-task-runner: grunt
      packages: grunt grunt-contrib-jshint grunt-contrib-watch grunt-contrib-sass grunt-contrib-clean grunt-contrib-uglify
  scss:
    validate: 'false'
  test:
    behat:
      from: behat.yml.dist
      to: behat.yml
      profile: default
      options: 'strict'
      commands:
        before: [ ]
        after: [ ]
    phpunit:
      options: ''
      execution: default
      from: phpunit.xml.dist
      to: phpunit.xml
      commands:
        before: [ ]
        after: [ ]
    blackfire:
      uuid:
      pages:
        - '/'
        - '/user'
    phpcs:
      mode: phpcs
      config: phpcs.xml
      ignore_annotations: false
      show_sniffs: false
      standards:
        - ./vendor/drupal/coder/coder_sniffer/Drupal
        - ./vendor/drupal/coder/coder_sniffer/DrupalPractice
        - ./vendor/ec-europa/qa-automation/phpcs/QualityAssurance
      ignore_patterns:
        - vendor/
        - web/
        - node_modules/
        - config/
        - '*.min.css'
        - '*.min.js'
      triggered_by:
        - php
        - module
        - inc
        - theme
        - profile
        - install
        - yml
      files:
        - ./lib
        - ./resources
        - ./src
    phpmd:
      config: phpmd.xml
      format: ansi
      ignore_patterns:
        - vendor/
        - web/
        - node_modules/
        - config/
      triggered_by:
        - php
        - module
        - inc
        - theme
        - install
      files:
        - lib
        - src
    phpstan:
      config: phpstan.neon
      level: '1'
      files: [ 'lib', 'src' ]
      ignores: [ 'vendor' ]
      memory_limit: ''
      options: ''
  lint:
    eslint:
      config: .eslintrc.json
      packages: 'eslint-config-drupal eslint-plugin-yml'
      ignores: [ 'vendor/*', 'web/*', 'dist/*' ]
      extensions_yaml: [ '.yml', '.yaml' ]
      options_yaml: ''
      extensions_js: [ '.js' ]
      options_js: ''
    php:
      extensions: [ 'php', 'module', 'inc', 'theme', 'install' ]
      exclude: [ 'vendor/', 'web/' ]
      options: ''
  invalid-versions:
    - 1.x
    - 2.x
  hooks:
    # A relative path from the project root where the hooks are located.
    dir: 'resources/git/hooks'
    active:
      # Check for modified files and run PHPcs.
      - pre-commit
      # Check if the commit message is properly formatted.
      - prepare-commit-msg
      # Run the PHPcs and linters (configurable).
      - pre-push
    prepare-commit-msg:
      example: 'ABC-123: The commit message.'
      conditions:
        - message: 'The commit message must start with the JIRA issue number.'
          regex: /^[A-Z]+\-\d+/
        - message: 'The JIRA issue number must be followed by a colon and space.'
          regex: /^[A-Z]+\-\d+:\ /
        - message: 'The subject must start with capital letter.'
          regex: /^[A-Z]+\-\d+:\ [A-Z]/
        - message: 'The commit message must end with a period.'
          regex: /\.$/
    pre-push:
      commands:
        - toolkit:test-phpcs
        - toolkit:test-phpmd
        - toolkit:lint-php
        - toolkit:opts-review
commands: [ ]
