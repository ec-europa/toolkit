<?xml version="1.0"?>
<ruleset name="phpcs">
    <description>The coding standard for phpcs.</description>

    <!-- Standard. -->
    <rule ref="PSR12"/>
    <rule ref="PSR12.Classes.OpeningBraceSpace.Found">
        <severity>0</severity>
    </rule>

    <!-- Arguments. -->
    <arg name="extensions" value="php,inc,yml"/>
    <arg name="report" value="full"/>
    <arg name="colors"/>
    <arg value="ps"/>

    <!-- Files to check. -->
    <file>src</file>
    <file>tests/Unit</file>
    <file>tests/Features</file>
    <file>tests/AbstractTest.php</file>

    <!-- Exclude patterns. -->
    <exclude-pattern>vendor/</exclude-pattern>
    <exclude-pattern>tests/fixtures</exclude-pattern>

    <rule ref="Generic">
        <exclude name="Generic.Arrays.ArrayIndent.CloseBraceNotNewLine"/>
        <exclude name="Generic.Arrays.DisallowShortArraySyntax.Found"/>
        <exclude name="Generic.Classes.OpeningBraceSameLine.BraceOnNewLine"/>
        <exclude name="Generic.CodeAnalysis.AssignmentInCondition.Found"/>
        <exclude name="Generic.CodeAnalysis.UnusedFunctionParameter.FoundInExtendedClass"/>
        <exclude name="Generic.Commenting.Todo.TaskFound"/>
        <exclude name="Generic.Files.EndFileNoNewline.Found"/>
        <exclude name="Generic.Files.LowercasedFilename.NotFound"/>
        <exclude name="Generic.Files.LineLength.TooLong"/>
        <exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine"/>
        <exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine"/>
        <exclude name="Generic.Formatting.MultipleStatementAlignment.NotSameWarning"/>
        <exclude name="Generic.Formatting.NoSpaceAfterCast.SpaceFound"/>
        <exclude name="Generic.Formatting.SpaceBeforeCast.NoSpace"/>
        <exclude name="Generic.PHP.ClosingPHPTag.NotFound"/>
        <exclude name="Generic.PHP.NoSilencedErrors.Discouraged"/>
        <exclude name="Generic.PHP.UpperCaseConstant.Found"/>
        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed"/>
        <!-- Disable metrics -->
        <exclude name="Generic.Metrics"/>
    </rule>

    <rule ref="Generic.Formatting.SpaceAfterNot">
        <properties>
            <property name="spacing" value="0"/>
        </properties>
    </rule>

    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4"/>
            <property name="tabIndent" value="false"/>
        </properties>
    </rule>

    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.Files.EndFileNewline.Found"/>
    <rule ref="Generic.Formatting.SpaceAfterCast.SpaceFound"/>

    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>

    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie">
        <properties>
            <property name="checkClosures" value="true"/>
        </properties>
    </rule>

    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.UpperCaseConstant"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

    <!-- Use Unix newlines -->
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>

    <rule ref="MySource.Debug.DebugCode"/>
    <rule ref="PEAR.Files.IncludingFile"/>
    <!-- Disable some error messages that we do not want. -->
    <rule ref="PEAR.Files.IncludingFile.UseIncludeOnce">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Files.IncludingFile.UseInclude">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Files.IncludingFile.UseRequireOnce">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Files.IncludingFile.UseRequire">
        <severity>0</severity>
    </rule>

    <rule ref="PEAR.Functions.FunctionCallSignature"/>
    <!-- Disable some error messages that we already cover. -->
    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket">
        <severity>0</severity>
    </rule>
    <!-- Disable some error messages that we do not want. -->
    <rule ref="PEAR.Functions.FunctionCallSignature.Indent">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.EmptyLine">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.OpeningIndent">
        <severity>0</severity>
    </rule>

    <rule ref="PEAR.Functions.ValidDefaultValue"/>

    <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
    <rule ref="PSR2.Namespaces.UseDeclaration"/>
    <rule ref="PSR2.Classes.ClassDeclaration.CloseBraceAfterBody">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Arrays.ArrayDeclaration"/>
    <!-- Disable some error messages that we do not want. -->
    <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.KeyNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.NoComma">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.NotLowerCase">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNoNewline">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>

    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <!-- Disable some error messages that we already cover. -->
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <!-- Disable some error messages that we already cover. -->
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.ControlStructures.SwitchDeclaration"/>
    <!-- Disable some error messages that we do not want. -->
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.BreakIndent">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.CaseIndent">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.CloseBraceAlign">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.DefaultIndent">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.DefaultNoBreak">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.EmptyCase">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.EmptyDefault">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.MissingDefault">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefaultBreak">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeBreak">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.CSS.ClassDefinitionClosingBraceSpace"/>
    <rule ref="Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingAfterClose">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.CSS.ClassDefinitionOpeningBraceSpace"/>
    <rule ref="Squiz.CSS.ClassDefinitionOpeningBraceSpace.AfterNesting">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.CSS.ColonSpacing"/>
    <rule ref="Squiz.CSS.DisallowMultipleStyleDefinitions"/>
    <rule ref="Squiz.CSS.EmptyClassDefinition"/>
    <rule ref="Squiz.CSS.EmptyStyleDefinition"/>
    <rule ref="Squiz.CSS.Indentation">
        <properties>
            <property name="indent" value="2"/>
        </properties>
    </rule>
    <rule ref="Squiz.CSS.MissingColon"/>
    <rule ref="Squiz.CSS.SemicolonSpacing"/>

    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
        </properties>
    </rule>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSpaceBeforeArg">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterBrace">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.FirstParamSpacing">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.Indent">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.CloseBracketLine">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
            <property name="spacing" value="1"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

    <rule ref="Drupal.Classes.UnusedUseStatement"/>
    <rule ref="Drupal.Classes.FullyQualifiedNamespace"/>
    <rule ref="Drupal.Classes.UseLeadingBackslash"/>
    <rule ref="Drupal.Files.EndFileNewline"/>
    <rule ref="Drupal.Commenting.DataTypeNamespace.DataTypeNamespace"/>

</ruleset>
